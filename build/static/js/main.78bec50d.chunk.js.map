{"version":3,"sources":["components/Button/Button.tsx","components/Button/index.ts","components/Text/Text.tsx","components/Text/index.ts","components/Container/Container.tsx","components/Container/index.ts","components/Column/Column.tsx","components/Column/index.ts","components/Row/Row.tsx","components/Row/index.ts","components/Toolbox/index.ts","components/Toolbox/Toolbox.tsx","components/SettingsPanel/index.ts","components/SettingsPanel/SettingsPanel.tsx","components/Topbar/index.ts","components/Topbar/Topbar.tsx","helpers/dragHelper.ts","App.tsx","index.tsx"],"names":["buttonSizeArray","colorsArray","variantsArray","title","className","Button","padding","text","size","variant","color","useNode","state","selected","events","dragged","connectors","connect","drag","setProp","actions","useState","editable","setEditable","enabled","useEditor","options","useEffect","ref","style","onClick","disabled","html","onChange","e","props","target","value","replace","tagName","craft","related","settings","node","data","map","item","index","type","id","name","checked","htmlFor","Text","fontSize","fontsize","step","min","max","defaultValue","Container","children","background","marginTop","marginBottom","marginLeft","marginRight","styles","Column","width","justifyArray","alignArray","Row","justifyContent","alignItems","justify","align","Toolbox","create","is","canvas","SettingsPanel","query","currentNodeId","nodes","isDeletable","React","createElement","delete","Topbar","canUndo","history","canRedo","setOptions","undo","redo","onDragStart","imgBefore","document","src","dataTransfer","setDragImage","App","addEventListener","removeEventListener","resolver","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.78bec50d.chunk.js","sourcesContent":["import {useEditor, useNode} from \"@craftjs/core\";\nimport {useEffect, useState} from \"react\";\nimport ContentEditable from \"react-contenteditable\";\n\nconst buttonSizeArray: string[] = ['Small', 'Medium', 'Large']\nconst colorsArray: string[] = ['bg-red-500', 'bg-blue-500', 'bg-gray-300']\nconst variantsArray: IVariant[] = [\n    {\n        title: 'Simple',\n        className: ''\n    },\n    {\n        title: 'Disabled',\n        className: 'opacity-50 cursor-not-allowed'\n    },\n    {\n        title: 'Pill',\n        className: 'rounded-full'\n    },\n]\n\ninterface IButtonProps {\n    text: string,\n    size?: string\n    variant?: string\n    color?: string\n}\n\ninterface IVariant {\n    title: string\n    className: string\n}\n\nexport default function Button ({text, size, variant, color}: IButtonProps) {\n    const { connectors: {connect, drag}, selected, actions: {setProp} } = useNode((state) => ({\n        selected: state.events.selected,\n        dragged: state.events.dragged\n    }));\n\n    const [editable, setEditable] = useState(false);\n\n    const { enabled } = useEditor((state) => ({\n        enabled: state.options.enabled\n    }));\n\n    useEffect(() => {\n        if (selected) {\n            return;\n        }\n\n        setEditable(false);\n    }, [selected]);\n\n\n    let padding\n    switch (size) {\n        case 'Small': padding = '4px 7px'; break;\n        case 'Medium': padding = '6px 13px'; break;\n        case 'Large': padding = '8px 16px'; break;\n        default: padding = '4px 7px';\n    }\n\n    function changeEditableMode () {\n        if(!enabled) {\n            return\n        }\n        setEditable(true)\n    }\n\n    return (\n        <button\n            ref={(ref: HTMLButtonElement) => connect(drag(ref))}\n            className={`${variant} ${color} hover:opacity-80 text-white font-bold py-2 px-4 border border-black rounded w-auto`}\n            style={{\n                padding: padding\n            }}\n            onClick={changeEditableMode}\n        >\n            <ContentEditable\n                disabled={!editable}\n                html={text}\n                onChange={e =>\n                    setProp(props =>\n                        props.text = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")\n                    )\n                }\n                tagName=\"p\"\n            />\n        </button>\n    )\n}\n\nconst ButtonSettings = () => {\n    const { actions: {setProp}, props } = useNode((node) => ({\n        props: node.data.props\n    }));\n\n    return (\n        <div>\n            <form className='mt-2'>\n                <h4 className='font-bold'>Size</h4>\n                {\n                    buttonSizeArray.map((item, index) => {\n                        return (\n                            <div className='mt-1' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"size\"\n                                       checked={props.size === item}\n                                       onChange={() => setProp((props) => (props.size = item))}\n                                />\n                                <label className='ml-2' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n            <form className='mt-2'>\n                <h4 className='font-bold'>Variant</h4>\n                {\n                    variantsArray.map((item: IVariant, index) => {\n                        return (\n                            <div className='mt-1' key={`${item.title}_${index}`}>\n                                <input type=\"radio\" id={`${item.title}_${index}`} name=\"variant\"\n                                       checked={props.variant === item.className}\n                                       onChange={() => setProp((props) => (props.variant = item.className))}\n                                />\n                                <label className='ml-2' htmlFor={`${item.title}_${index}`}>{item.title}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n            <form className='mt-2'>\n                <h4 className='font-bold'>Color</h4>\n                {\n                    colorsArray.map((item, index) => {\n                        return (\n                            <div className='mt-1' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"color\"\n                                       checked={props.color === item}\n                                       onChange={() => setProp((props) => (props.color = item))}\n                                />\n                                <label className='ml-2 capitalize' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n        </div>\n    )\n}\n\nexport const ButtonDefaultProps = {\n    size: 'Medium',\n    variant: '',\n    color: 'bg-blue-500',\n    text: 'Click me',\n};\n\nButton.craft = {\n    props: ButtonDefaultProps,\n    related: {\n        settings: ButtonSettings,\n    },\n};","import Button from \"./Button\";\n\nexport default Button","import {useEditor, useNode} from \"@craftjs/core\";\nimport ContentEditable from 'react-contenteditable'\nimport {useState, useEffect, ChangeEvent} from \"react\";\n\ninterface ITextProps {\n    text: string\n    fontSize: number\n}\n\nexport default function Text ({text, fontSize}: ITextProps) {\n    const { connectors: {connect, drag}, selected, actions: {setProp} } = useNode((state) => ({\n        selected: state.events.selected,\n        dragged: state.events.dragged\n    }));\n\n    const { enabled } = useEditor((state) => ({\n        enabled: state.options.enabled\n    }));\n\n\n    const [editable, setEditable] = useState(false);\n\n    useEffect(() => {\n        if (selected) {\n            return\n        }\n\n        setEditable(false)\n    }, [selected])\n\n    function changeEditableMode () {\n        if(!enabled) {\n            return\n        }\n        setEditable(true)\n    }\n\n    return (\n        <div ref={(ref: HTMLDivElement) => connect(drag(ref))}\n             onClick={changeEditableMode}\n        >\n            <ContentEditable\n                disabled={!editable}\n                html={text}\n                onChange={e =>\n                    setProp(props =>\n                        props.text = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")\n                    )\n                }\n                tagName=\"p\"\n                style={{fontSize: `${fontSize}px`}}\n            />\n        </div>\n    )\n}\n\nfunction TextSettings () {\n    const { actions: {setProp}, fontSize } = useNode((node) => ({\n        fontSize: node.data.props.fontSize\n    }));\n\n    return (\n        <form className='mt-4'>\n            <input\n                type=\"range\"\n                className='w-full'\n                step={1}\n                min={7}\n                max={50}\n                defaultValue={fontSize}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                    setProp(props => props.fontSize = e.target.value);\n                }}\n            />\n        </form>\n    )\n}\n\nexport const TextDefaultProps = {\n    text: 'Hi world!',\n    fontsize: 16\n}\n\nText.craft = {\n    props: TextDefaultProps,\n    related: {\n        settings: TextSettings,\n    },\n};","import Text from \"./Text\";\n\nexport default Text","import React, {ChangeEvent} from 'react'\nimport {useNode} from \"@craftjs/core\";\n\nconst colorsArray: string[] = ['bg-red-300', 'bg-blue-300', 'bg-gray-200', 'bg-gray-100']\n\ninterface IPropsContainer {\n    children?: React.ReactNode\n    background?: string\n    padding?: number\n    marginTop?: number\n    marginBottom?: number\n    marginLeft?: number\n    marginRight?: number\n}\n\nexport default function Container ({children, background, padding, marginTop, marginBottom, marginLeft, marginRight}: IPropsContainer) {\n    const { connectors: {connect, drag} } = useNode();\n\n    const styles = {\n        padding: padding + 'em',\n        marginTop: marginTop + 'px',\n        marginBottom: marginBottom + 'px',\n        marginLeft: marginLeft + 'px',\n        marginRight: marginRight + 'px',\n    }\n\n    return (\n        <div\n            className={`lg:container w-full ${background}`}\n            style={styles}\n            ref={(ref: HTMLDivElement) => connect(drag(ref))}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport function ContainerSettings () {\n    const { background, padding, marginTop, marginBottom, marginLeft, marginRight, actions: {setProp} } = useNode(node => ({\n        background: node.data.props.background,\n        padding: node.data.props.padding,\n        marginTop: node.data.props.marginTop,\n        marginBottom: node.data.props.marginBottom,\n        marginLeft: node.data.props.marginLeft,\n        marginRight: node.data.props.marginRight,\n    }));\n\n    return (\n        <div>\n            <form>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"buttonSetting2\">Padding</label>\n                    <input type=\"range\" id=\"containerSetting2\" name=\"padding\"\n                           min={0.2}\n                           max={5}\n                           step={0.2}\n                           defaultValue={padding}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.padding = e.target.value))}\n                    />\n                </div>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"buttonSetting3\">MarginTop</label>\n                    <input type=\"range\" id=\"containerSetting3\" name=\"marginTop\"\n                           min={0}\n                           max={50}\n                           step={1}\n                           defaultValue={marginTop}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.marginTop = e.target.value))}\n                    />\n                </div>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"buttonSetting4\">MarginBottom</label>\n                    <input type=\"range\" id=\"containerSetting4\" name=\"marginBottom\"\n                           min={0}\n                           max={50}\n                           step={1}\n                           defaultValue={marginBottom}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.marginBottom = e.target.value))}\n                    />\n                </div>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"buttonSetting5\">MarginLeft</label>\n                    <input type=\"range\" id=\"containerSetting5\" name=\"marginLeft\"\n                           min={0}\n                           max={50}\n                           step={1}\n                           defaultValue={marginLeft}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.marginLeft = e.target.value))}\n                    />\n                </div>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"buttonSetting6\">MarginRight</label>\n                    <input type=\"range\" id=\"containerSetting6\" name=\"marginLeft\"\n                           min={0}\n                           max={50}\n                           step={1}\n                           defaultValue={marginRight}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.marginRight = e.target.value))}\n                    />\n                </div>\n            </form>\n            <form className='mt-2'>\n                <h4 className='font-bold'>Background Color</h4>\n                {\n                    colorsArray.map((item, index) => {\n                        return (\n                            <div className='mt-1' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"color\"\n                                       checked={background === item}\n                                       onChange={() => setProp((props) => (props.background = item))}\n                                />\n                                <label className='ml-2 capitalize' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n        </div>\n    )\n}\n\nexport const ContainerDefaultProps = {\n    background : \"bg-gray-200\",\n    padding: 0,\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0\n};\n\nContainer.craft = {\n    props: ContainerDefaultProps,\n    related: {\n        settings: ContainerSettings,\n    },\n}","import Container from \"./Container\";\n\nexport default Container","import React, {ChangeEvent} from 'react'\nimport {useNode} from \"@craftjs/core\";\n\nconst colorsArray: string[] = ['bg-red-500', 'bg-blue-500', 'bg-gray-300']\n\ninterface IColumnContainer {\n    children?: React.ReactNode\n    background?: string\n    width: number\n    padding?: number\n}\n\nexport default function Column ({children, background, width, padding}: IColumnContainer) {\n    const { connectors: {connect, drag} } = useNode();\n\n    const styles = {\n        background: background ? background : '',\n        padding: padding ? padding + 'em' : '',\n        width: width ? width + 'px' : ''\n    }\n\n    return (\n        <div\n            className={`${background}`}\n            style={styles}\n            ref={(ref: HTMLDivElement) => connect(drag(ref))}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport function ColumnSettings () {\n    const { background, width, padding, actions: {setProp} } = useNode(node => ({\n        background: node.data.props.background,\n        padding: node.data.props.padding,\n        width: node.data.props.width\n    }));\n\n    return (\n        <div>\n            <form className='mt-2'>\n                <h4 className='font-bold'>Background Color</h4>\n                {\n                    colorsArray.map((item, index) => {\n                        return (\n                            <div className='mt-1' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"color\"\n                                       checked={background === item}\n                                       onChange={() => setProp((props) => (props.background = item))}\n                                />\n                                <label className='ml-2 capitalize' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n            <form>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"columnSetting2\">Padding</label>\n                    <input type=\"range\" id=\"columnSetting2\" name=\"padding\"\n                           min={0.2}\n                           max={5}\n                           step={0.2}\n                           defaultValue={padding}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.padding = e.target.value))}\n                    />\n                </div>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"columnSetting3\">Width</label>\n                    <input type=\"range\" name=\"width\" id=\"columnSetting3\"\n                           min={20}\n                           max={200}\n                           step={1}\n                           defaultValue={width}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.width = e.target.value))}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport const ColumnDefaultProps = {\n    background : \"bg-red-500\",\n    width: 100,\n    padding: 1\n};\n\nColumn.craft = {\n    props: ColumnDefaultProps,\n    related: {\n        settings: ColumnSettings,\n    },\n}","import Column from \"./Column\";\n\nexport default Column","import React, {ChangeEvent} from 'react'\nimport {useNode} from \"@craftjs/core\";\n\nconst justifyArray: string[] = ['space-between', 'center', 'space-around', 'space-evenly', 'flex-start', 'flex-end']\nconst alignArray: string[] = ['flex-start', 'flex-end', 'baseline', 'stretch', 'center']\nconst colorsArray: string[] = ['bg-red-500', 'bg-blue-500', 'bg-gray-300']\n\ninterface IRowContainer {\n    children?: React.ReactNode\n    background?: string\n    padding?: number\n    justify?: string\n    align?: string\n}\n\nexport default function Row ({children, background, padding, justify, align}: IRowContainer) {\n    const { connectors: {connect, drag} } = useNode();\n\n    const styles = {\n        padding: padding ? padding + 'em' : '',\n    }\n\n    let justifyContent\n    switch (justify) {\n        case 'flex-start': justifyContent = 'justify-start'; break;\n        case 'flex-end': justifyContent = 'justify-end'; break;\n        case 'center': justifyContent = 'justify-center'; break;\n        case 'space-around': justifyContent = 'justify-around'; break;\n        case 'space-evenly': justifyContent = 'justify-evenly'; break;\n        case 'space-between': justifyContent = 'justify-between'; break;\n        default: justifyContent = 'justify-between'\n    }\n\n    let alignItems\n    switch (align) {\n        case 'flex-start': alignItems = 'items-start'; break;\n        case 'flex-end': alignItems = 'items-end'; break;\n        case 'baseline': alignItems = 'items-baseline'; break;\n        case 'stretch': alignItems = 'items-stretch'; break;\n        case 'center': alignItems = 'items-center'; break;\n        default: alignItems = 'items-center'\n    }\n\n\n    return (\n        <div\n            style={styles}\n            className={`lg:container w-full flex ${background} ${justifyContent} ${alignItems}`}\n            ref={(ref: HTMLDivElement) => connect(drag(ref))}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport function RowSettings () {\n    const { background, padding, justify, align, actions: {setProp} } = useNode(node => ({\n        background: node.data.props.background,\n        padding: node.data.props.padding,\n        justify: node.data.props.justify,\n        align: node.data.props.align\n    }));\n\n    return (\n        <div>\n            <form>\n                <div className='flex flex-col mt-2'>\n                    <label htmlFor=\"rowSetting2\">Padding</label>\n                    <input type=\"range\" id=\"rowSetting2\" name=\"padding\"\n                           min={0.2}\n                           max={5}\n                           step={0.2}\n                           defaultValue={padding}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setProp((props) => (props.padding = e.target.value))}\n                    />\n                </div>\n            </form>\n            <form className='mt-4'>\n                <h1 className='font-bold'>Justify Content</h1>\n                {\n                    justifyArray.map((item: string, index: number) => {\n                        return (\n                            <div className='flex mt-2 items-center' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"justify\"\n                                       checked={justify === item}\n                                       onChange={() => setProp((props) => (props.justify = item))}\n                                />\n                                <label className='ml-2 capitalize' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n            <form className='mt-4'>\n                <h1 className='font-bold'>Align Items</h1>\n                {\n                    alignArray.map((item, index) => {\n                        return (\n                            <div className='flex mt-2 items-center' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"align\"\n                                       checked={align === item}\n                                       onChange={() => setProp((props) => (props.align = item))}\n                                />\n                                <label className='ml-2 capitalize' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n            <form className='mt-2'>\n                <h4 className='font-bold'>Background Color</h4>\n                {\n                    colorsArray.map((item, index) => {\n                        return (\n                            <div className='mt-1' key={`${item}_${index}`}>\n                                <input type=\"radio\" id={`${item}_${index}`} name=\"color\"\n                                       checked={background === item}\n                                       onChange={() => setProp((props) => (props.background = item))}\n                                />\n                                <label className='ml-2 capitalize' htmlFor={`${item}_${index}`}>{item}</label>\n                            </div>\n                        )\n                    })\n                }\n            </form>\n        </div>\n    )\n}\n\nexport const RowDefaultProps = {\n    background : \"bg-gray-300\",\n    padding: 1,\n    justify: 'space-between',\n    align: 'center'\n};\n\nRow.craft = {\n    props: RowDefaultProps,\n    related: {\n        settings: RowSettings,\n    },\n}\n","import Row from './Row'\n\nexport default Row","import Toolbox from \"./Toolbox\";\n\nexport default Toolbox","import {useEditor} from \"@craftjs/core\";\nimport Button from '../Button'\nimport Text from '../Text'\nimport Container from \"../Container\";\nimport {Element} from \"@craftjs/core\";\nimport Column from \"../Column\";\nimport Row from \"../Row\";\n\nexport default function Toolbox () {\n    const { connectors } = useEditor();\n\n    return (\n        <div className='p-2 w-60 gap-1 flex flex-col p-4 bg-gray-200 rounded-md'>\n            <h3 className='uppercase mb-3 text-center'>Drag to add</h3>\n            <div>\n                <button\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded w-full\"\n                    ref={(ref: HTMLButtonElement) => connectors.create(ref, <Element is={Container} padding={0.5} marginTop={2} canvas />)}\n                >\n                    Container\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded w-full\"\n                    ref={(ref: HTMLButtonElement) => connectors.create(ref, <Element is={Row} padding={0.5} canvas />)}\n                >\n                    Row\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded w-full\"\n                    ref={(ref: HTMLButtonElement) => connectors.create(ref, <Element is={Column} padding={0.5} width={100} canvas />)}\n                >\n                    Column\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded w-full\"\n                    ref={(ref: HTMLButtonElement) => connectors.create(ref, <Button text=\"Click me\" color='bg-blue-500' size='Medium' />)}\n                >\n                    Button\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded w-full\"\n                    ref={(ref: HTMLButtonElement) => connectors.create(ref, <Text text=\"Hi world!\" fontSize={14} />)}\n                >\n                    Text\n                </button>\n            </div>\n        </div>\n    )\n}","import SettingsPanel from \"./SettingsPanel\";\n\nexport default SettingsPanel","import React from 'react'\nimport { useEditor } from \"@craftjs/core\";\n\nexport default function SettingsPanel () {\n    const { actions, selected } = useEditor((state, query) => {\n        const currentNodeId = state.events.selected;\n        let selected;\n\n        if ( currentNodeId ) {\n            selected = {\n                id: currentNodeId,\n                name: state.nodes[currentNodeId].data.name,\n                settings: state.nodes[currentNodeId].related && state.nodes[currentNodeId].related.settings,\n                isDeletable: query.node(currentNodeId).isDeletable()\n            };\n        }\n\n        return {\n            selected\n        }\n    })\n\n    return selected ? (\n        <div className='bg-gray-200 w-60 p-4 rounded-md mt-2'>\n            <div className='flex justify-between items-center'>\n                <h3>Selected</h3>\n                <p className='px-4 py-0.5 rounded-xl border-solid border-gray-500 border text-sm'>{selected.name}</p>\n            </div>\n            {\n                selected.settings && React.createElement(selected.settings)\n            }\n            {\n                selected.isDeletable && (\n                    <button className=\"bg-transparent w-full mt-4 hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                            onClick={() => {\n                                actions.delete(selected.id);\n                            }}\n                    >\n                        Delete\n                    </button>\n                )\n            }\n        </div>\n    ) : null\n}","import Topbar from \"./Topbar\";\n\nexport default Topbar","import { useEditor } from \"@craftjs/core\";\n\nexport default function Topbar () {\n    const { actions, enabled, canUndo, canRedo } = useEditor(\n        (state, query) => ({\n            enabled: state.options.enabled,\n            canUndo: state.options.enabled && query.history.canUndo(),\n            canRedo: state.options.enabled && query.history.canRedo(),\n        })\n    );\n    return (\n        <div className='w-full'>\n            <div className=\"flex items-center justify-between bg-red-300 py-3 px-5 rounded\">\n                <div className='flex items-center'>\n                    <input type=\"checkbox\" name=\"enable\" id=\"enable\"\n                           checked={enabled}\n                           onChange={() => actions.setOptions(options => options.enabled = !options.enabled)}\n                    />\n                    <label className='ml-3' htmlFor=\"enable\">Enable edit mode</label>\n                </div>\n                <div>\n                    <button\n                        className={`bg-blue-500 uppercase hover:bg-blue-700 text-white font-bold py-0.5 px-3 text-sm rounded ${!canUndo ? 'opacity-50 cursor-not-allowed' : ''}`}\n                        disabled={!canUndo}\n                        onClick={() => actions.history.undo()}\n                    >\n                        Undo\n                    </button>\n                    <button\n                        className={`bg-blue-500 uppercase hover:bg-blue-700 text-white font-bold py-0.5 px-3 text-sm rounded ml-5 ${!canRedo ? 'opacity-50 cursor-not-allowed' : ''}`}\n                        disabled={!canRedo}\n                        onClick={() => actions.history.redo()}\n                    >\n                        Redo\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}","export function onDragStart(e: any) {\n    const imgBefore = document.createElement('img');\n    imgBefore.src = 'a';\n    e.dataTransfer.setDragImage(imgBefore, 0, 0);\n}","import React, {useEffect} from 'react';\nimport Toolbox from \"./components/Toolbox\";\nimport SettingsPanel from \"./components/SettingsPanel\";\nimport Topbar from \"./components/Topbar\";\nimport {Editor, Frame, Element} from \"@craftjs/core\";\nimport Button from \"./components/Button\";\nimport Container from \"./components/Container\";\nimport Text from \"./components/Text\"\nimport Row from \"./components/Row\";\nimport Column from \"./components/Column\";\nimport {onDragStart} from \"./helpers/dragHelper\";\n\nfunction App() {\n    useEffect(() => {\n        document.addEventListener('dragstart', onDragStart);\n        return () => {\n            document.removeEventListener('dragstart', onDragStart)\n        }\n    }, [])\n\n    return (\n        <div className=\"app w-full\">\n            <div className='p-12 mx-auto my-0 wrapper'>\n                <h1 className='text-center text-2xl uppercase'>React page builder</h1>\n                <Editor resolver={{Text, Button, Container, Row, Column}}>\n                    <div className='mt-5'>\n                        <Topbar/>\n                        <div className='flex justify-between mt-5'>\n                            <Frame>\n                                <Element is={Container} background='bg-gray-100' padding={1} marginRight={10} canvas>\n                                    <Button text='Click me!' size='Medium' />\n                                    <Element is={Container} padding={1} marginTop={20} marginBottom={20} canvas>\n                                        <Text text='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.' fontSize={14} />\n                                    </Element>\n                                    <Element is={Container} padding={1} marginTop={20} marginBottom={20} canvas>\n                                        <Element is={Row} canvas>\n                                            <Element is={Column} width={200} canvas>\n                                                <Text text='Text inside column' fontSize={20} />\n                                            </Element>\n                                            <Element is={Column} width={150} canvas>\n                                                <Text text=':)' fontSize={20} />\n                                            </Element>\n                                        </Element>\n                                    </Element>\n                                </Element>\n                            </Frame>\n                            <div>\n                                <Toolbox/>\n                                <SettingsPanel/>\n                            </div>\n                        </div>\n                    </div>\n                </Editor>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}